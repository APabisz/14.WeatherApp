{"version":3,"sources":["components/Form.js","components/Result.js","components/App.js","index.js"],"names":["Form","value","change","onSubmit","e","preventDefault","field","document","createElement","setAttribute","style","position","opacity","appElement","querySelector","prepend","setTimeout","focus","removeChild","className","onChange","id","name","type","placeholder","Result","error","weather","city","content","errorBox","setUTCTime","time","hour","formatTime","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","length","date","Date","toLocaleString","temp","main","toFixed","sunriseTime","sys","sunrise","timezone","sunsetTime","sunset","wind","speed","pressure","img","icon","src","alt","App","useState","inputValue","setInputValue","setError","setWeather","useEffect","url","fetch","then","res","ok","json","Error","data","catch","console","clear","target","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e84bd055.chunk.js","sourcesContent":["import React from \"react\"\r\nimport \"../styles/Form.css\"\r\n\r\nconst Form = ({ value, change }) => {\r\n  const handleOnSubmit = (e) => {\r\n    e.preventDefault()\r\n    let field = document.createElement(\"input\")\r\n    field.setAttribute(\"type\", \"text\")\r\n    field.style.position = \"absolute\"\r\n    field.style.opacity = 0\r\n    const appElement = document.querySelector(\".App\")\r\n    appElement.prepend(field)\r\n\r\n    setTimeout(function () {\r\n      field.focus()\r\n      setTimeout(function () {\r\n        appElement.removeChild(field)\r\n      }, 50)\r\n    }, 50)\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleOnSubmit} className='form'>\r\n      <input\r\n        className='search-bar'\r\n        onChange={(e) => change(e)}\r\n        value={value}\r\n        id='city'\r\n        name='city'\r\n        type='text'\r\n        placeholder='Type city...'\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Form\r\n","import React from \"react\"\r\nimport \"../styles/Result.css\"\r\n\r\nconst Result = ({ value, error, weather }) => {\r\n  const city = value\r\n  let content = null\r\n  let errorBox = null\r\n  const setUTCTime = (time) => {\r\n    let hour = formatTime(time.getUTCHours())\r\n    let minutes = formatTime(time.getUTCMinutes())\r\n    let seconds = formatTime(time.getUTCSeconds())\r\n\r\n    return `${hour}:${minutes}:${seconds}`\r\n  }\r\n\r\n  const formatTime = (time) => {\r\n    return time < 10 ? `0${time}` : time\r\n  }\r\n\r\n  if (!error && weather !== null && city.length > 0) {\r\n    const date = new Date().toLocaleString()\r\n    const temp = weather.main.temp.toFixed(1)\r\n    const sunriseTime = setUTCTime(\r\n      new Date((weather.sys.sunrise + weather.timezone) * 1000)\r\n    )\r\n\r\n    const sunsetTime = setUTCTime(\r\n      new Date((weather.sys.sunset + weather.timezone) * 1000)\r\n    )\r\n\r\n    const wind = weather.wind.speed\r\n    const pressure = weather.main.pressure\r\n\r\n    const img = `https://openweathermap.org/img/w/${weather.weather[0].icon}.png`\r\n\r\n    content = (\r\n      <div className='info'>\r\n        <h3 className='city'>\r\n          <img className='img' src={img} alt='' /> Results for{\" \"}\r\n          <span>{city}</span>\r\n        </h3>\r\n        <h4 className='date'>Dataset for the day and hour: {date}</h4>\r\n        <h4 className='temp'>Current temperature: {temp}&#8451;</h4>\r\n        <h4 className='sunriseTime'>\r\n          Sunrise today (local time): {sunriseTime}\r\n        </h4>\r\n        <h4 className='sunsetTime'>Sunset today (local time): {sunsetTime}</h4>\r\n        <h4 className='wind'>Current wind force: {wind} m/s</h4>\r\n        <h4 className='pressure'>Current pressure: {pressure} hPa</h4>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (city.length > 0) {\r\n    errorBox = (\r\n      <div className='info'>\r\n        We doesn't have info about <span>{city}</span>\r\n      </div>\r\n    )\r\n  } else {\r\n    errorBox = null\r\n  }\r\n\r\n  return <div className='result'>{error ? errorBox : content}</div>\r\n}\r\n\r\nexport default Result\r\n","import React, { useState, useEffect } from \"react\"\nimport \"../styles/App.css\"\nimport Form from \"./Form\"\nimport Result from \"./Result\"\n\nconst APIKey = \"4ff8452d7fae0d40de5e0efd30f5b637\"\n\nfunction App() {\n  const [inputValue, setInputValue] = useState(\"\")\n  const [error, setError] = useState(true)\n  const [weather, setWeather] = useState(null)\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value)\n  }\n\n  useEffect(() => {\n    if (inputValue === \"\") return\n\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${inputValue}&appid=${APIKey}&units=metric`\n\n    fetch(url)\n      .then((res) => {\n        if (res.ok) {\n          return res.json()\n        }\n        throw Error(\"Couldn't find the city\")\n      })\n      .then((data) => {\n        setError(false)\n        setWeather(data)\n      })\n      .catch(() => {\n        console.clear()\n        setError(true)\n        setWeather(null)\n      })\n  }, [inputValue])\n\n  return (\n    <div className='App'>\n      <div className='wrapper'>\n        <h1 className='title'>Weather App</h1>\n        <Form value={inputValue} change={handleInputChange} />\n        <Result value={inputValue} error={error} weather={weather} />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./components/App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}